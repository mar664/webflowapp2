import { CompatibleComponents, TimeUnitsEnum } from "./types";

export const TIME_UNITS_OPTIONS = Object.entries(TimeUnitsEnum.enum).map(
  ([key, value]) => ({ value, label: key }),
);

export const INIT_COMPATIBLE_COMPONENTS: CompatibleComponents = {
  numberIncrementer: {
    isAlready: false,
    isApplicable: false,
  },
  modal: {
    isAlready: false,
    isApplicable: false,
  },
  cookieConsent: {
    isAlready: false,
    isApplicable: false,
  },
};

export const svgElementsMap: Record<string, string> = {
  a: "a",
  altglyph: "altGlyph",
  altglyphdef: "altGlyphDef",
  altglyphitem: "altGlyphItem",
  animate: "animate",
  animatecolor: "animateColor",
  animatemotion: "animateMotion",
  animatetransform: "animateTransform",
  animation: "animation",
  audio: "audio",
  canvas: "canvas",
  circle: "circle",
  clippath: "clipPath",
  "color-profile": "color-profile",
  cursor: "cursor",
  defs: "defs",
  desc: "desc",
  discard: "discard",
  ellipse: "ellipse",
  feblend: "feBlend",
  fecolormatrix: "feColorMatrix",
  fecomponenttransfer: "feComponentTransfer",
  fecomposite: "feComposite",
  feconvolvematrix: "feConvolveMatrix",
  fediffuselighting: "feDiffuseLighting",
  fedisplacementmap: "feDisplacementMap",
  fedistantlight: "feDistantLight",
  fedropshadow: "feDropShadow",
  feflood: "feFlood",
  fefunca: "feFuncA",
  fefuncb: "feFuncB",
  fefuncg: "feFuncG",
  fefuncr: "feFuncR",
  fegaussianblur: "feGaussianBlur",
  feimage: "feImage",
  femerge: "feMerge",
  femergenode: "feMergeNode",
  femorphology: "feMorphology",
  feoffset: "feOffset",
  fepointlight: "fePointLight",
  fespecularlighting: "feSpecularLighting",
  fespotlight: "feSpotLight",
  fetile: "feTile",
  feturbulence: "feTurbulence",
  filter: "filter",
  font: "font",
  "font-face": "font-face",
  "font-face-format": "font-face-format",
  "font-face-name": "font-face-name",
  "font-face-src": "font-face-src",
  "font-face-uri": "font-face-uri",
  foreignobject: "foreignObject",
  g: "g",
  glyph: "glyph",
  glyphref: "glyphRef",
  handler: "handler",
  hatch: "hatch",
  hatchpath: "hatchpath",
  hkern: "hkern",
  image: "image",
  line: "line",
  lineargradient: "linearGradient",
  marker: "marker",
  mask: "mask",
  metadata: "metadata",
  "missing-glyph": "missing-glyph",
  mpath: "mpath",
  path: "path",
  pattern: "pattern",
  polygon: "polygon",
  polyline: "polyline",
  radialgradient: "radialGradient",
  rect: "rect",
  set: "set",
  stop: "stop",
  style: "style",
  svg: "svg",
  switch: "switch",
  symbol: "symbol",
  tbreak: "tbreak",
  text: "text",
  textarea: "textArea",
  textpath: "textPath",
  title: "title",
  tref: "tref",
  tspan: "tspan",
  use: "use",
  video: "video",
  view: "view",
  vkern: "vkern",
  vmpath: "vmpath",
  wheel: "wheel",
  xpath: "xpath",
};
